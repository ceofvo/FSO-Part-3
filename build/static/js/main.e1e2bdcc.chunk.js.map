{"version":3,"sources":["components/PersonForm.js","components/Persons.js","components/Filter.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["PersonForm","props","onSubmit","onAddName","value","newName","onChange","onNameInputChange","newPhone","onPhoneInputChange","type","Persons","allpersons","filters","length","filterName","map","filter","key","id","name","number","onClick","onDelete","persons","person","Filter","onFilterInputChange","baseUrl","axios","get","then","response","data","newObject","post","put","delete","Notification","message","status","className","showMessage","App","useState","setPersons","setFilters","setNewName","setNewPhone","setFilterName","setMessage","useEffect","personService","initialPersons","catch","error","setTimeout","event","target","query","newCopy","el","toLowerCase","indexOf","preventDefault","result","find","undefined","window","confirm","changedNumber","p","personObject","returnedPerson","concat","parseInt","identity","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e1e2bdcc.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst PersonForm = (props) => {\r\n    return (\r\n         <div>\r\n             <form onSubmit={props.onAddName}>\r\n                <div>\r\n                Name: <input \r\n                            value={props.newName} \r\n                            onChange={props.onNameInputChange}\r\n                        />\r\n                </div>\r\n                <div>\r\n                Number: <input \r\n                            value={props.newPhone} \r\n                            onChange={props.onPhoneInputChange}\r\n                        />\r\n                </div>\r\n                <div>\r\n                <button type=\"submit\">Add</button>\r\n                </div>\r\n            </form>    \r\n         </div>\r\n     );\r\n };\r\n\r\n export default PersonForm;","import React from 'react';\r\n\r\n\r\nconst Persons = (props) => {\r\n    let allpersons;\r\n    if (props.filters && props.filters.length && props.filterName !== '') {\r\n        allpersons =  props.filters.map((filter) =>\r\n        <li key={filter.id}>{filter.name}  {filter.number} \r\n         <button onClick={props.onDelete} value={filter.id}>Delete</button></li>\r\n        );\r\n    } else {\r\n        allpersons = props.persons.map((person) =>\r\n        <li key={person.id}>{person.name}  {person.number} \r\n        <button onClick={props.onDelete} value={person.id}>Delete</button>\r\n        </li>\r\n        );\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n         <div>\r\n             <ul>\r\n             {allpersons}\r\n             </ul>\r\n         </div>\r\n     );\r\n };\r\n\r\n export default Persons;","import React from 'react';\r\n\r\n\r\nconst Filter = (props) => {\r\n   \r\n    return (\r\n         <div>\r\n\r\n            Filter shown with: <input \r\n                        value={props.filterName} \r\n                        onChange={props.onFilterInputChange}\r\n                    />\r\n\r\n         </div>\r\n     );\r\n };\r\n\r\n export default Filter;","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst deleteOne = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then(response => response.data)\r\n}\r\n\r\n\r\nexport default { getAll, create, update, deleteOne }\r\n","import React from 'react';\r\n\r\n\r\nconst Notification = (props) => {\r\n    if (props.message.status === \"success\") {\r\n        return (\r\n            <div className=\"success\">\r\n            {props.message.showMessage}\r\n            </div>\r\n        )\r\n    } else if (props.message.status === \"error\") {\r\n        return (    \r\n        <div className=\"error\">\r\n            {props.message.showMessage}\r\n        </div>\r\n        )   \r\n    } else {\r\n        return null\r\n    }\r\n  }\r\n\r\n  export default Notification;","import React, { useState, useEffect } from 'react';\r\nimport PersonForm from './components/PersonForm'; \r\nimport Persons from './components/Persons';  \r\nimport Filter from './components/Filter';\r\nimport personService from './services/persons';\r\nimport Notification from './components/Notification';  \r\n\r\nconst App = () => {\r\n\r\n  const [ persons, setPersons] = useState([]);\r\n  const [ filters, setFilters] = useState([]);\r\n\r\n  const [ newName, setNewName ] = useState('');\r\n  const [ newPhone, setNewPhone ] = useState('');\r\n  const [ filterName, setFilterName ] = useState('');\r\n  const [ message, setMessage ] = useState([])\r\n\r\n  useEffect(() => {\r\n    personService\r\n    .getAll()\r\n      .then(initialPersons => {\r\n        setPersons(initialPersons)\r\n    })\r\n    .catch(error => {\r\n      setMessage( {showMessage : error.response.data.message, status: \"error\"} );\r\n      setTimeout(() => {\r\n        setMessage({showMessage : null, status: \"null\"})\r\n      }, 5000)\r\n    })\r\n  }, []);\r\n\r\n  const handleNameInputChange = (event) => {\r\n    setNewName(event.target.value);\r\n  };\r\n  const handlePhoneInputChange = (event) => {\r\n    setNewPhone(event.target.value);\r\n  };\r\n\r\n  const handleFilterInputChange = (event) => {\r\n    setFilterName(event.target.value);\r\n    const newCopy = [...persons];\r\n    const filterPerson = (arr, query) => {\r\n        return arr.filter(el => el.name.toLowerCase().indexOf(query.toLowerCase()) !== -1);\r\n    };\r\n    setFilters(filterPerson(newCopy, filterName));\r\n  };\r\n\r\n  const handleDelete = (event) => {\r\n    const id = parseInt(event.target.value, 10)\r\n    const identity = persons.find(person => person.id === id);\r\n\r\n    if( identity !== undefined) {\r\n        const response= window.confirm(`Delete ${identity.name} ?`);\r\n        if(response){\r\n          const result = persons.filter(person => person.id !== id);\r\n          personService\r\n          .deleteOne(id)\r\n            .then(response => {\r\n              setPersons(result)\r\n              setMessage( {showMessage : `${identity.name} deleted successfully`, status: \"success\"} );\r\n              setTimeout(() => {\r\n                setMessage({showMessage : null, status: \"null\"})\r\n              }, 5000)\r\n           })\r\n          .catch(error => {\r\n            setMessage( {showMessage : `Phone details of '${identity.name}' was already removed from server`, status: \"error\"} );\r\n            setTimeout(() => {\r\n              setMessage({showMessage : null, status: \"null\"})\r\n            }, 5000)\r\n            setPersons(persons.filter(p => p.id !== identity.id))\r\n          })\r\n        }\r\n    }\r\n};\r\n\r\nconst addName = (event) => {\r\n    event.preventDefault();\r\n    const result = persons.find((person) => person.name === newName);\r\n\r\n    if( result !== undefined) {\r\n        const response = window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`);\r\n        if(response){\r\n          const changedNumber = { ...result, number: newPhone }\r\n          personService\r\n          .update(result.id, changedNumber)\r\n            .then(response => {\r\n              setPersons(persons.map(person => person.id !== result.id ? person : response));\r\n              setNewName('');\r\n              setNewPhone('');\r\n              setMessage( {showMessage : `${result.name} updated`, status: \"success\"} );\r\n              setTimeout(() => {\r\n                setMessage({showMessage : null, status: \"null\"})\r\n              }, 5000)\r\n          })\r\n          .catch(error => {\r\n            setMessage( {showMessage : `Phone details of '${result.name}' was already removed from server`, status: \"error\"} );\r\n            setTimeout(() => {\r\n              setMessage({showMessage : null, status: \"null\"})\r\n            }, 5000)\r\n            setPersons(persons.filter(p => p.id !== result.id))\r\n          })\r\n        }\r\n    }\r\n    else {\r\n        const personObject = {\r\n            name: newName,\r\n            number: newPhone,\r\n        };\r\n\r\n        personService\r\n        .create(personObject)\r\n          .then(returnedPerson => {\r\n          setPersons(persons.concat(returnedPerson));\r\n          setNewName('');\r\n          setNewPhone('');\r\n          setMessage({showMessage : `Added ${personObject.name}`, status: \"success\"} );\r\n          setTimeout(() => {\r\n            setMessage({showMessage : null, status: \"null\"})\r\n          }, 5000)\r\n        })\r\n    }\r\n};\r\n\r\n\r\nreturn (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification message={message} />\r\n\r\n      <Filter  \r\n        persons={persons}\r\n        filterName={filterName}\r\n        onFilterInputChange={handleFilterInputChange} />\r\n        \r\n      <h3>Add a new</h3>\r\n      <PersonForm \r\n        persons={persons}\r\n        newName={newName}\r\n        newPhone={newPhone}\r\n        onNameInputChange={handleNameInputChange}\r\n        onPhoneInputChange={handlePhoneInputChange}\r\n        onAddName={addName}\r\n      />\r\n     \r\n      <h2>Numbers</h2>\r\n      <Persons \r\n        persons={persons} \r\n        filters={filters} \r\n        filterName={filterName}\r\n        onDelete={handleDelete} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}